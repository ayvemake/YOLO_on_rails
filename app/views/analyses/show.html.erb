<% content_for :header do %>
  <div class="flex justify-between items-center">
    <div class="flex items-center space-x-4">
      <h1 class="text-3xl font-bold tracking-tight text-gray-900">Analyse #<%= @analysis.id %></h1>
      <% if @analysis.api_data&.dig("detections").present? %>
        <% detection_class = @analysis.api_data["detections"].first["class_name"] rescue nil %>
        <span class="px-3 py-1 text-sm font-semibold rounded-full 
          <%= detection_class == "PARTICLE" ? "bg-red-100 text-red-800" : "bg-green-100 text-green-800" %>">
          <%= detection_class || "Inconnu" %>
        </span>
      <% end %>
    </div>
    <%= link_to analyses_path, class: "text-blue-600 hover:text-blue-900" do %>
      <i class="fas fa-arrow-left mr-1"></i> Retour aux analyses
    <% end %>
  </div>
<% end %>

<div class="container mx-auto px-4 py-8">
  <div class="mb-4">
    <%= link_to analyses_path, class: "text-blue-600 hover:text-blue-800" do %>
      <i class="fas fa-arrow-left"></i> Retour aux analyses
    <% end %>
  </div>

  <h1 class="text-2xl font-bold mb-6">Analyse #<%= @analysis.id %></h1>

  <% if @analysis.failed? %>
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4">
      <strong>Erreur lors de l'analyse</strong>
      <p><%= @analysis.error_message %></p>
    </div>
  <% end %>

  <!-- Images côte à côte -->
  <div class="flex flex-row gap-4 mb-6">
    <div class="flex-1">
      <h2 class="text-lg font-semibold mb-2">Image originale</h2>
      <% if @analysis.image.attached? %>
        <%= image_tag @analysis.image, class: "w-full h-auto object-contain" %>
      <% end %>
    </div>

    <div class="flex-1">
      <h2 class="text-lg font-semibold mb-2">Image analysée</h2>
      <% if @analysis.result_image.attached? %>
        <%= image_tag @analysis.result_image, class: "w-full h-auto object-contain" %>
      <% end %>
    </div>
  </div>

  <!-- Métriques en 2x2 -->
  <div class="grid grid-cols-2 gap-4 mb-6">
    <!-- Confiance -->
    <div class="bg-white rounded-lg p-4 shadow">
      <h2 class="text-sm font-medium text-gray-500 mb-1">Confiance</h2>
      <% if @analysis.confidence_score %>
        <div class="text-2xl font-bold">
          <%= number_to_percentage(@analysis.confidence_score * 100, precision: 1) %>
        </div>
      <% else %>
        <div class="text-2xl font-bold text-gray-400">-</div>
      <% end %>
    </div>

    <!-- Temps de traitement -->
    <div class="bg-white rounded-lg p-4 shadow">
      <h2 class="text-sm font-medium text-gray-500 mb-1">Temps de traitement</h2>
      <div class="text-2xl font-bold">
        <%= @analysis.processing_time || '-' %>
      </div>
    </div>

    <!-- Détections -->
    <div class="bg-white rounded-lg p-4 shadow">
      <h2 class="text-sm font-medium text-gray-500 mb-1">Détections</h2>
      <div class="text-2xl font-bold">
        <%= @analysis.defect_count %>
      </div>
    </div>

    <!-- Types de défauts -->
    <div class="bg-white rounded-lg p-4 shadow">
      <h2 class="text-sm font-medium text-gray-500 mb-1">Types de défauts</h2>
      <% if @analysis.has_defects? %>
        <div class="text-2xl font-bold">
          <%= @analysis.defect_types.join(', ') %>
        </div>
      <% else %>
        <div class="text-2xl font-bold text-gray-500">Aucun défaut</div>
      <% end %>
    </div>
  </div>

  <!-- Détails des détections -->
  <% if @analysis.completed? && @analysis.analysis_results.any? %>
    <div class="mt-6 bg-white rounded-lg p-4 shadow">
      <h2 class="text-lg font-semibold mb-4">Détails des détections</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        <% @analysis.analysis_results.each do |result| %>
          <div class="border rounded p-3">
            <p class="font-medium"><%= result.defect_class %></p>
            <p>Confiance: <%= number_to_percentage(result.confidence * 100, precision: 1) %></p>
            <p>Position: (<%= number_with_precision(result.position_x, precision: 1) %>, 
                        <%= number_with_precision(result.position_y, precision: 1) %>)</p>
            <p>Statut: <%= result.status.humanize %></p>
          </div>
        <% end %>
      </div>
    </div>
  <% end %>
</div>


<!-- Détections -->
<%= render partial: "detections" if @analysis.api_data&.dig("detections").present? %>


<%= javascript_tag do %>
  document.addEventListener('DOMContentLoaded', function() {
    // Connexion WebSocket uniquement si l'analyse est en cours
    <% if @analysis.pending? || @analysis.processing? %>
      const socket = new WebSocket('<%= @websocket_url %>');
      
      socket.onopen = function(e) {
        console.log('WebSocket connection established');
      };
      
      socket.onmessage = function(event) {
        const data = JSON.parse(event.data);
        
        // Vérifier si les données correspondent à notre analyse
        if (data.analysis_id === <%= @analysis.id %>) {
          // Mettre à jour l'interface utilisateur avec les résultats
          updateAnalysisUI(data);
          
          // Fermer la connexion WebSocket une fois les résultats reçus
          socket.close();
          
          // Rafraîchir la page pour afficher les résultats complets
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        }
      };
    <% end %>
    
    // Ajouter des fonctionnalités d'interaction pour les images
    setupImageInteractions();
  });
  
  function setupImageInteractions() {
    // Ajouter des événements de survol pour les détections
    const resultImage = document.getElementById('result-image');
    if (resultImage) {
      // Ajouter une classe pour le curseur
      resultImage.classList.add('cursor-zoom-in');
      
      // Ajouter un événement de clic pour agrandir l'image
      resultImage.addEventListener('click', function() {
        toggleFullscreen('result-image');
      });
    }
  }
  
  function toggleFullscreen(imageId) {
    const image = document.getElementById(imageId);
    if (!image) return;
    
    // Créer un conteneur modal pour l'image en plein écran
    const modal = document.createElement('div');
    modal.classList.add('fixed', 'inset-0', 'z-50', 'flex', 'items-center', 'justify-center', 'bg-black', 'bg-opacity-90');
    
    // Créer une version agrandie de l'image
    const enlargedImg = document.createElement('img');
    enlargedImg.src = image.src;
    enlargedImg.classList.add('max-h-screen', 'max-w-screen', 'p-4');
    
    // Ajouter un bouton de fermeture
    const closeBtn = document.createElement('button');
    closeBtn.innerHTML = '<i class="fas fa-times"></i>';
    closeBtn.classList.add('absolute', 'top-4', 'right-4', 'text-white', 'text-2xl', 'p-2');
    
    // Ajouter des informations sur les détections
    const infoPanel = document.createElement('div');
    infoPanel.classList.add('absolute', 'bottom-4', 'left-4', 'right-4', 'bg-black', 'bg-opacity-70', 'text-white', 'p-4', 'rounded', 'overflow-auto', 'max-h-60');
    
    // Ajouter le contenu des informations
    <% if @analysis.completed? && @analysis.analysis_results.any? %>
      let infoPanelContent = '<div class="grid grid-cols-1 md:grid-cols-2 gap-4">';
      
      // Informations sur le modèle
      infoPanelContent += '<div><h3 class="text-lg font-bold mb-2">Modèle</h3>';
      infoPanelContent += '<ul class="text-sm">';
      infoPanelContent += '<li>Nom: <%= @analysis.api_data["model_name"] || "YOLOv8" %></li>';
      infoPanelContent += '<li>Précision: <%= number_to_percentage(@analysis.api_data["precision"] * 100, precision: 1) if @analysis.api_data["precision"] %></li>';
      infoPanelContent += '<li>Rappel: <%= number_to_percentage(@analysis.api_data["recall"] * 100, precision: 1) if @analysis.api_data["recall"] %></li>';
      infoPanelContent += '</ul></div>';
      
      // Détections
      infoPanelContent += '<div><h3 class="text-lg font-bold mb-2">Détections (<%= @analysis.analysis_results.count %>)</h3>';
      infoPanelContent += '<ul class="text-sm max-h-32 overflow-y-auto">';
      <% @analysis.analysis_results.each do |result| %>
        infoPanelContent += '<li class="mb-1 <%= result.status == "ok" ? "text-green-300" : "text-red-300" %>">';
        infoPanelContent += '<span class="font-medium"><%= result.status == "ok" ? "Conforme" : "Défaut détecté" %></span> - ';
        infoPanelContent += 'Type: <%= result.defect_type || "Inconnu" %> - ';
        infoPanelContent += 'Pos: (<%= result.position_x.round(1) %>, <%= result.position_y.round(1) %>) - ';
        infoPanelContent += 'Conf: <%= number_to_percentage(result.conformity_score, precision: 1) %>';
        infoPanelContent += '</li>';
      <% end %>
      infoPanelContent += '</ul></div>';
      
      infoPanelContent += '</div>';
      infoPanel.innerHTML = infoPanelContent;
    <% end %>
    
    // Ajouter les événements
    modal.addEventListener('click', function() {
      document.body.removeChild(modal);
    });
    
    closeBtn.addEventListener('click', function(e) {
      e.stopPropagation();
      document.body.removeChild(modal);
    });
    
    enlargedImg.addEventListener('click', function(e) {
      e.stopPropagation();
    });
    
    // Assembler le modal
    modal.appendChild(enlargedImg);
    modal.appendChild(closeBtn);
    modal.appendChild(infoPanel);
    
    // Ajouter à la page
    document.body.appendChild(modal);
  }
<% end %> 