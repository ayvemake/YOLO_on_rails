<% content_for :header do %>
  <div class="flex justify-between items-center">
    <h1 class="text-3xl font-bold tracking-tight text-gray-900">Analyse #<%= @analysis.id %></h1>
    <%= link_to analyses_path, class: "text-blue-600 hover:text-blue-900" do %>
      <i class="fas fa-arrow-left mr-1"></i> Retour aux analyses
    <% end %>
  </div>
<% end %>

<div class="grid grid-cols-1 gap-6 lg:grid-cols-2">
  <!-- Informations générales -->
  <div class="bg-white shadow overflow-hidden sm:rounded-lg">
    <div class="px-4 py-5 sm:px-6">
      <h3 class="text-lg leading-6 font-medium text-gray-900">Informations générales</h3>
      <p class="mt-1 max-w-2xl text-sm text-gray-500">Détails et résultats de l'analyse</p>
    </div>
    <div class="border-t border-gray-200">
      <dl>
        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
          <dt class="text-sm font-medium text-gray-500">Statut</dt>
          <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
            <span id="analysis-status" class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= analysis_status_color(@analysis.status) %>">
              <%= @analysis.status %>
            </span>
          </dd>
        </div>
        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
          <dt class="text-sm font-medium text-gray-500">Score de conformité</dt>
          <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
            <% if @analysis.score %>
              <span id="analysis-score" class="text-lg font-bold <%= @analysis.conforming? ? 'text-green-600' : 'text-red-600' %>">
                <%= number_to_percentage(@analysis.score * 100, precision: 1) %>
              </span>
              <span class="ml-2 text-xs text-gray-500">
                (<%= @analysis.conforming? ? "Conforme" : "Non conforme" %>)
              </span>
            <% else %>
              <span class="text-gray-400">En attente de résultats</span>
            <% end %>
          </dd>
        </div>
        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
          <dt class="text-sm font-medium text-gray-500">Temps de traitement</dt>
          <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
            <% 
              # Accéder directement aux données JSON
              processing_time = nil
              begin
                components_data = @analysis[:components]
                if components_data.is_a?(Hash) || components_data.is_a?(ActiveSupport::HashWithIndifferentAccess)
                  processing_time = components_data['processing_time'] || components_data[:processing_time]
                  processing_time = processing_time.to_f if processing_time
                end
              rescue
                processing_time = nil
              end
            %>
            
            <% if processing_time && processing_time > 0 %>
              <%= processing_time.round(2) %> secondes
            <% else %>
              <span class="text-gray-400">-</span>
            <% end %>
          </dd>
        </div>
        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
          <dt class="text-sm font-medium text-gray-500">Date de création</dt>
          <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
            <%= @analysis.created_at.strftime("%d/%m/%Y à %H:%M:%S") %>
          </dd>
        </div>
        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
          <dt class="text-sm font-medium text-gray-500">Composants détectés</dt>
          <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
            <%= @analysis.analysis_results.count %>
          </dd>
        </div>
      </dl>
    </div>
  </div>

  <!-- Image analysée -->
  <div class="bg-white shadow overflow-hidden sm:rounded-lg">
    <div class="px-4 py-5 sm:px-6">
      <h3 class="text-lg leading-6 font-medium text-gray-900">Image analysée</h3>
      <p class="mt-1 max-w-2xl text-sm text-gray-500">Visualisation des composants détectés</p>
    </div>
    <div class="border-t border-gray-200 p-4">
      <% if @analysis.result_image.try(:attached?) %>
        <div class="relative">
          <%= image_tag url_for(@analysis.result_image), class: "w-full h-auto rounded-lg" %>
        </div>
      <% else %>
        <div class="text-center p-4 bg-gray-50 rounded-lg">
          <p class="text-gray-500">
            <% if @analysis.completed? %>
              Aucune image de résultat disponible
            <% else %>
              L'image de résultat sera affichée une fois l'analyse terminée
            <% end %>
          </p>
        </div>
      <% end %>
    </div>
  </div>
</div>

<!-- Résultats détaillés -->
<div class="mt-8 bg-white shadow overflow-hidden sm:rounded-lg">
  <div class="px-4 py-5 sm:px-6">
    <h3 class="text-lg leading-6 font-medium text-gray-900">Résultats de l'analyse</h3>
    <p class="mt-1 max-w-2xl text-sm text-gray-500">Détails des défauts détectés sur le wafer</p>
  </div>

  <div class="border-t border-gray-200">
    <dl>
      <!-- Statut -->
      <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
        <dt class="text-sm font-medium text-gray-500">Statut</dt>
        <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
          <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= analysis_status_color(@analysis.status) %>">
            <%= @analysis.status %>
          </span>
        </dd>
      </div>

      <!-- Score de confiance -->
      <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
        <dt class="text-sm font-medium text-gray-500">Score de confiance</dt>
        <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
          <%= number_to_percentage(@analysis.score * 100, precision: 2) if @analysis.score %>
        </dd>
      </div>

      <!-- Défauts détectés -->
      <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
        <dt class="text-sm font-medium text-gray-500">Défauts détectés</dt>
        <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
          <% if @analysis.defects.any? %>
            <div class="space-y-2">
              <% @analysis.defects.group_by { |d| d['class_name'] }.each do |defect_type, defects| %>
                <div class="flex items-center justify-between">
                  <span class="font-medium"><%= defect_type %></span>
                  <span class="text-red-600"><%= defects.count %> détection(s)</span>
                </div>
              <% end %>
            </div>
          <% else %>
            <span class="text-green-600">Aucun défaut détecté</span>
          <% end %>
        </dd>
      </div>

      <!-- Temps de traitement -->
      <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
        <dt class="text-sm font-medium text-gray-500">Temps de traitement</dt>
        <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
          <%= number_to_human(@analysis.processing_time, precision: 2, units: :seconds) if @analysis.processing_time %>
        </dd>
      </div>
    </dl>
  </div>

  <!-- Image avec annotations -->
  <div class="border-t border-gray-200 p-4">
    <% if @analysis.result_image.try(:attached?) %>
      <div class="relative">
        <%= image_tag url_for(@analysis.result_image), class: "w-full h-auto rounded-lg" %>
      </div>
    <% else %>
      <div class="text-center p-4 bg-gray-50 rounded-lg">
        <p class="text-gray-500">
          <% if @analysis.completed? %>
            Aucune image de résultat disponible
          <% else %>
            L'image de résultat sera affichée une fois l'analyse terminée
          <% end %>
        </p>
      </div>
    <% end %>
  </div>
</div>

<%
=begin %>
<% if @analysis.verification && @analysis.verification["details"] %>
  <!-- Détails de vérification -->
  <div class="mt-8 bg-white shadow overflow-hidden sm:rounded-lg">
    <div class="px-4 py-5 sm:px-6">
      <h3 class="text-lg leading-6 font-medium text-gray-900">Détails de vérification</h3>
      <p class="mt-1 max-w-2xl text-sm text-gray-500">Informations détaillées sur la vérification</p>
    </div>
    <div class="border-t border-gray-200 p-4">
      <pre class="bg-gray-50 p-4 rounded-lg overflow-x-auto text-sm"><%= JSON.pretty_generate(@analysis.verification["details"]) %></pre>
    </div>
  </div>
<% end %>
<%
=end %>

<div data-controller="analysis" data-analysis-id="<%= @analysis.id %>">
  <div class="mb-4">
    <h3 class="text-lg font-semibold">Statut de l'analyse</h3>
    <p class="text-sm text-gray-600">
      Statut: <span data-analysis-target="status" class="font-medium <%= @analysis.status == 'completed' ? 'text-green-600' : (@analysis.status == 'failed' ? 'text-red-600' : 'text-blue-600') %>"><%= @analysis.status %></span>
    </p>
    
    <!-- Barre de progression -->
    <div class="w-full bg-gray-200 rounded-full h-2.5 mt-2">
      <div data-analysis-target="progress" class="h-2.5 rounded-full <%= @analysis.status == 'completed' ? 'bg-green-500' : (@analysis.status == 'failed' ? 'bg-red-500' : 'bg-blue-500') %>" style="width: <%= @analysis.status == 'completed' ? '100%' : '50%' %>"></div>
    </div>
  </div>
  
  <div data-analysis-target="result" id="analysis-result-container-<%= @analysis.id %>">
    <% if @analysis.status == 'completed' %>
      <%= render 'analysis_result', analysis: @analysis %>
    <% else %>
      <div class="p-4 bg-blue-50 rounded-lg">
        <p class="text-blue-700">
          <i class="fas fa-spinner fa-spin mr-2"></i>
          Analyse en cours...
        </p>
      </div>
    <% end %>
  </div>
</div>

<div class="mt-4">
  <button data-action="analysis#refreshStatus" class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
    <i class="fas fa-sync-alt mr-2"></i> Rafraîchir le statut
  </button>
</div>

<%= javascript_tag do %>
  document.addEventListener('DOMContentLoaded', function() {
    // Connexion WebSocket uniquement si l'analyse est en cours
    <% if @analysis.pending? %>
      const socket = new WebSocket('<%= @websocket_url %>');
      
      socket.onopen = function(e) {
        console.log('WebSocket connection established');
      };
      
      socket.onmessage = function(event) {
        const data = JSON.parse(event.data);
        
        // Vérifier si les données correspondent à notre analyse
        if (data.analysis_id === <%= @analysis.id %>) {
          // Mettre à jour l'interface utilisateur avec les résultats
          updateAnalysisUI(data);
          
          // Fermer la connexion WebSocket une fois les résultats reçus
          socket.close();
          
          // Rafraîchir la page pour afficher les résultats complets
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        }
      };
      
      // ... le reste de votre code JavaScript ...
    <% end %>
  });
<% end %> 